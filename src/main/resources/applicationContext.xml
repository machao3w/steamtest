<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<context:component-scan base-package="com.machao.steamshop">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	<!-- 配制数据源 -->
	<context:property-placeholder
		location="classpath:dbconfig.properties" />
	<bean id="pooledDataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- 配制driver/url/username/password -->
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>

	<!-- 配制和MyBatis的整合 -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 指定mybatis配制文件路径 -->
		<property name="configLocation" value="classpath:mybatis.xml"></property>
		<!-- 配制数据源 -->
		<property name="dataSource" ref="pooledDataSource"></property>
		<!-- 指定mybatis。mapper文件所在的包路径 -->
		<property name="mapperLocations"
			value="classpath:mapper/*.xml"></property>
	</bean>

	<!-- 将mybatis接口实现加入ioc容器中。扫描dao层的接口实现类 -->
	<bean id="mapperScannerConfigurer"	
		class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.machao.steamshop.dao"></property>
	</bean>

	<!-- 事物管理器的配制 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 控制数据源 -->
		<property name="dataSource" ref="pooledDataSource"></property>
	</bean>
	<!-- 开启基于注解的事物，使用xml配制形式的事物 -->
	<aop:config>
		<!-- 切入点表达式 -->
		<aop:pointcut
			expression="execution(* com.machao.steamshop.service..*(..))" id="txPoint" />
		<!-- 配制事物增强 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint" />
	</aop:config>

	<!-- 配制事物增强，事物如何切入 -->
	<tx:advice id="txAdvice">
		<tx:attributes>
			<!-- 所有方法都是事物方法 -->
			<tx:method name="*" />
			<!-- 以给开始的所有方法 -->
			<tx:method name="get*" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<!-- shiro配制 -->
	<!-- shiro的web过滤器  -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- Shiro的核心安全接口,这个属性是必须的 -->
        <property name="securityManager" ref="securityManager" />
        <!-- 认证提交地址，如果没有认证将返回此url，请求此地址将由formAuthenticationFilter进行认证 -->
        <property name="loginUrl" value="/user/loginPage" />    
        <property name="unauthorizedUrl" value="nopermission" /> <!--当没有权限的时候，跳转到这个url-->
        <property name="filterChainDefinitions">
            <value>
            	<!-- 对静态资源设置匿名访问 -->
            	/static/** = anon
            	<!--  -->
            	/** = anon
            </value>
        </property>
    </bean>
	
	<!-- securityManeger  -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="myRealm"></property>
	</bean>
	<!-- realm -->
	<bean id="myRealm" class="com.machao.steamshop.shiro.UserRealm">
	
	</bean>
</beans>
